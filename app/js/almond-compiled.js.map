{"version":3,"sources":["almond.js"],"names":[],"mappings":";;;;;;;;;;;;;AASA,IAAI,SAAJ,EAAe,QAAf,EAAwB,MAAxB;AACA,CAAC,UAAU,KAAV,EAAiB;AAChB,MAAI,IAAJ;MAAU,IAAV;MAAe,OAAf;MAAwB,QAAxB;MACE,UAAU,EAAV;MACA,UAAU,EAAV;MACA,SAAS,EAAT;MACA,WAAW,EAAX;MACA,SAAS,OAAO,SAAP,CAAiB,cAAjB;MACT,MAAM,GAAG,KAAH;MACN,iBAAiB,OAAjB,CARc;;AAUhB,WAAS,OAAT,CAAiB,GAAjB,EAAsB,IAAtB,EAA4B;AAC1B,WAAO,OAAO,IAAP,CAAY,GAAZ,EAAiB,IAAjB,CAAP,CAD0B;GAA5B;;;;;;;;;;AAVgB,WAsBP,SAAT,CAAmB,IAAnB,EAAyB,QAAzB,EAAmC;AACjC,QAAI,SAAJ;QAAe,WAAf;QAA4B,QAA5B;QAAsC,QAAtC;QAAgD,SAAhD;QACE,MADF;QACU,YADV;QACwB,KADxB;QAC+B,CAD/B;QACkC,CADlC;QACqC,IADrC;QAEE,YAAY,YAAY,SAAS,KAAT,CAAe,GAAf,CAAZ;QACZ,MAAM,OAAO,GAAP;QACN,UAAU,GAAC,IAAO,IAAI,GAAJ,CAAP,IAAoB,EAArB;;;AALqB,QAQ7B,QAAQ,KAAK,MAAL,CAAY,CAAZ,MAAmB,GAAnB,EAAwB;;;;AAIlC,UAAI,QAAJ,EAAc;AACZ,eAAO,KAAK,KAAL,CAAW,GAAX,CAAP,CADY;AAEZ,oBAAY,KAAK,MAAL,GAAc,CAAd;;;AAFA,YAKR,OAAO,YAAP,IAAuB,eAAe,IAAf,CAAoB,KAAK,SAAL,CAApB,CAAvB,EAA6D;AAC/D,eAAK,SAAL,IAAkB,KAAK,SAAL,EAAgB,OAAhB,CAAwB,cAAxB,EAAwC,EAAxC,CAAlB,CAD+D;SAAjE;;;;;;AALY,YAaZ,GAAO,UAAU,KAAV,CAAgB,CAAhB,EAAmB,UAAU,MAAV,GAAmB,CAAnB,CAAnB,CAAyC,MAAzC,CAAgD,IAAhD,CAAP;;;AAbY,aAgBP,IAAI,CAAJ,EAAO,IAAI,KAAK,MAAL,EAAa,KAAK,CAAL,EAAQ;AACnC,iBAAO,KAAK,CAAL,CAAP,CADmC;AAEnC,cAAI,SAAS,GAAT,EAAc;AAChB,iBAAK,MAAL,CAAY,CAAZ,EAAe,CAAf,EADgB;AAEhB,iBAAK,CAAL,CAFgB;WAAlB,MAGO,IAAI,SAAS,IAAT,EAAe;AACxB,gBAAI,MAAM,CAAN,KAAY,KAAK,CAAL,MAAY,IAAZ,IAAoB,KAAK,CAAL,MAAY,IAAZ,CAAhC,EAAmD;;;;;;;AAOrD,oBAPqD;aAAvD,MAQO,IAAI,IAAI,CAAJ,EAAO;AAChB,mBAAK,MAAL,CAAY,IAAI,CAAJ,EAAO,CAAnB,EADgB;AAEhB,mBAAK,CAAL,CAFgB;aAAX;WATF;SALT;;;AAhBY,YAsCZ,GAAO,KAAK,IAAL,CAAU,GAAV,CAAP,CAtCY;OAAd,MAuCO,IAAI,KAAK,OAAL,CAAa,IAAb,MAAuB,CAAvB,EAA0B;;;AAGnC,eAAO,KAAK,SAAL,CAAe,CAAf,CAAP,CAHmC;OAA9B;KA3CT;;;AARiC,QA2D7B,CAAC,aAAa,OAAb,CAAD,IAA0B,GAA1B,EAA+B;AACjC,kBAAY,KAAK,KAAL,CAAW,GAAX,CAAZ,CADiC;;AAGjC,WAAK,IAAI,UAAU,MAAV,EAAkB,IAAI,CAAJ,EAAO,KAAK,CAAL,EAAQ;AACxC,sBAAc,UAAU,KAAV,CAAgB,CAAhB,EAAmB,CAAnB,EAAsB,IAAtB,CAA2B,GAA3B,CAAd,CADwC;;AAGxC,YAAI,SAAJ,EAAe;;;AAGb,eAAK,IAAI,UAAU,MAAV,EAAkB,IAAI,CAAJ,EAAO,KAAK,CAAL,EAAQ;AACxC,uBAAW,IAAI,UAAU,KAAV,CAAgB,CAAhB,EAAmB,CAAnB,EAAsB,IAAtB,CAA2B,GAA3B,CAAJ,CAAX;;;;AADwC,gBAKpC,QAAJ,EAAc;AACZ,yBAAW,SAAS,WAAT,CAAX,CADY;AAEZ,kBAAI,QAAJ,EAAc;;AAEZ,2BAAW,QAAX,CAFY;AAGZ,yBAAS,CAAT,CAHY;AAIZ,sBAJY;eAAd;aAFF;WALF;SAHF;;AAoBA,YAAI,QAAJ,EAAc;AACZ,gBADY;SAAd;;;;;AAvBwC,YA8BpC,CAAC,YAAD,IAAiB,OAAjB,IAA4B,QAAQ,WAAR,CAA5B,EAAkD;AACpD,yBAAe,QAAQ,WAAR,CAAf,CADoD;AAEpD,kBAAQ,CAAR,CAFoD;SAAtD;OA9BF;;AAoCA,UAAI,CAAC,QAAD,IAAa,YAAb,EAA2B;AAC7B,mBAAW,YAAX,CAD6B;AAE7B,iBAAS,KAAT,CAF6B;OAA/B;;AAKA,UAAI,QAAJ,EAAc;AACZ,kBAAU,MAAV,CAAiB,CAAjB,EAAoB,MAApB,EAA4B,QAA5B,EADY;AAEZ,eAAO,UAAU,IAAV,CAAe,GAAf,CAAP,CAFY;OAAd;KA5CF;;AAkDA,WAAO,IAAP,CA7GiC;GAAnC;;AAgHA,WAAS,WAAT,CAAqB,OAArB,EAA8B,SAA9B,EAAyC;AACvC,WAAO,YAAY;;;;AAIjB,UAAI,OAAO,IAAI,IAAJ,CAAS,SAAT,EAAoB,CAApB,CAAP;;;;;AAJa,UASb,OAAO,KAAK,CAAL,CAAP,KAAmB,QAAnB,IAA+B,KAAK,MAAL,KAAgB,CAAhB,EAAmB;AACpD,aAAK,IAAL,CAAU,IAAV,EADoD;OAAtD;AAGA,aAAO,KAAI,KAAJ,CAAU,KAAV,EAAiB,KAAK,MAAL,CAAY,CAAC,OAAD,EAAU,SAAV,CAAZ,CAAjB,CAAP,CAZiB;KAAZ,CADgC;GAAzC;;AAiBA,WAAS,aAAT,CAAuB,OAAvB,EAAgC;AAC9B,WAAO,UAAU,IAAV,EAAgB;AACrB,aAAO,UAAU,IAAV,EAAgB,OAAhB,CAAP,CADqB;KAAhB,CADuB;GAAhC;;AAMA,WAAS,QAAT,CAAkB,OAAlB,EAA2B;AACzB,WAAO,UAAU,KAAV,EAAiB;AACtB,cAAQ,OAAR,IAAmB,KAAnB,CADsB;KAAjB,CADkB;GAA3B;;AAMA,WAAS,OAAT,CAAiB,IAAjB,EAAuB;AACrB,QAAI,QAAQ,OAAR,EAAiB,IAAjB,CAAJ,EAA4B;AAC1B,UAAI,OAAO,QAAQ,IAAR,CAAP,CADsB;AAE1B,aAAO,QAAQ,IAAR,CAAP,CAF0B;AAG1B,eAAS,IAAT,IAAiB,IAAjB,CAH0B;AAI1B,WAAK,KAAL,CAAW,KAAX,EAAkB,IAAlB,EAJ0B;KAA5B;;AAOA,QAAI,CAAC,QAAQ,OAAR,EAAiB,IAAjB,CAAD,IAA2B,CAAC,QAAQ,QAAR,EAAkB,IAAlB,CAAD,EAA0B;AACvD,YAAM,IAAI,KAAJ,CAAU,QAAQ,IAAR,CAAhB,CADuD;KAAzD;AAGA,WAAO,QAAQ,IAAR,CAAP,CAXqB;GAAvB;;;;;AAnKgB,WAoLP,WAAT,CAAqB,IAArB,EAA2B;AACzB,QAAI,MAAJ;QACE,QAAQ,OAAO,KAAK,OAAL,CAAa,GAAb,CAAP,GAA2B,CAAC,CAAD,CAFZ;AAGzB,QAAI,QAAQ,CAAC,CAAD,EAAI;AACd,eAAS,KAAK,SAAL,CAAe,CAAf,EAAkB,KAAlB,CAAT,CADc;AAEd,aAAO,KAAK,SAAL,CAAe,QAAQ,CAAR,EAAW,KAAK,MAAL,CAAjC,CAFc;KAAhB;AAIA,WAAO,CAAC,MAAD,EAAS,IAAT,CAAP,CAPyB;GAA3B;;;;;;;AApLgB,SAmMhB,GAAU,iBAAU,IAAV,EAAgB,OAAhB,EAAyB;AACjC,QAAI,MAAJ;QACE,QAAQ,YAAY,IAAZ,CAAR;QACA,SAAS,MAAM,CAAN,CAAT,CAH+B;;AAKjC,WAAO,MAAM,CAAN,CAAP,CALiC;;AAOjC,QAAI,MAAJ,EAAY;AACV,eAAS,UAAU,MAAV,EAAkB,OAAlB,CAAT,CADU;AAEV,eAAS,QAAQ,MAAR,CAAT,CAFU;KAAZ;;;AAPiC,QAa7B,MAAJ,EAAY;AACV,UAAI,UAAU,OAAO,SAAP,EAAkB;AAC9B,eAAO,OAAO,SAAP,CAAiB,IAAjB,EAAuB,cAAc,OAAd,CAAvB,CAAP,CAD8B;OAAhC,MAEO;AACL,eAAO,UAAU,IAAV,EAAgB,OAAhB,CAAP,CADK;OAFP;KADF,MAMO;AACL,aAAO,UAAU,IAAV,EAAgB,OAAhB,CAAP,CADK;AAEL,cAAQ,YAAY,IAAZ,CAAR,CAFK;AAGL,eAAS,MAAM,CAAN,CAAT,CAHK;AAIL,aAAO,MAAM,CAAN,CAAP,CAJK;AAKL,UAAI,MAAJ,EAAY;AACV,iBAAS,QAAQ,MAAR,CAAT,CADU;OAAZ;KAXF;;;AAbiC,WA8B1B;AACL,SAAG,SAAS,SAAS,GAAT,GAAe,IAAf,GAAsB,IAA/B;AACH,SAAG,IAAH;AACA,UAAI,MAAJ;AACA,SAAG,MAAH;KAJF,CA9BiC;GAAzB,CAnMM;;AAyOhB,WAAS,UAAT,CAAoB,IAApB,EAA0B;AACxB,WAAO,YAAY;AACjB,aAAO,MAAC,IAAU,OAAO,MAAP,IAAiB,OAAO,MAAP,CAAc,IAAd,CAA3B,IAAmD,EAApD,CADU;KAAZ,CADiB;GAA1B;;AAMA,aAAW;AACT,aAAS,iBAAU,IAAV,EAAgB;AACvB,aAAO,YAAY,IAAZ,CAAP,CADuB;KAAhB;AAGT,aAAS,iBAAU,IAAV,EAAgB;AACvB,UAAI,IAAI,QAAQ,IAAR,CAAJ,CADmB;AAEvB,UAAI,OAAO,CAAP,KAAa,WAAb,EAA0B;AAC5B,eAAO,CAAP,CAD4B;OAA9B,MAEO;AACL,eAAQ,QAAQ,IAAR,IAAgB,EAAhB,CADH;OAFP;KAFO;AAQT,YAAQ,gBAAU,IAAV,EAAgB;AACtB,aAAO;AACL,YAAI,IAAJ;AACA,aAAK,EAAL;AACA,iBAAS,QAAQ,IAAR,CAAT;AACA,gBAAQ,WAAW,IAAX,CAAR;OAJF,CADsB;KAAhB;GAZV,CA/OgB;;AAqQhB,SAAO,cAAU,IAAV,EAAgB,IAAhB,EAAsB,QAAtB,EAAgC,OAAhC,EAAyC;AAC9C,QAAI,SAAJ;QAAe,OAAf;QAAwB,GAAxB;QAA6B,GAA7B;QAAkC,CAAlC;QACE,OAAO,EAAP;QACA,sBAAsB,0DAAtB;QACA,YAHF;;;AAD8C,WAO9C,GAAU,WAAW,IAAX;;;AAPoC,QAU1C,iBAAiB,WAAjB,IAAgC,iBAAiB,UAAjB,EAA6B;;;;AAI/D,aAAO,CAAC,KAAK,MAAL,IAAe,SAAS,MAAT,GAAkB,CAAC,SAAD,EAAY,SAAZ,EAAuB,QAAvB,CAAlC,GAAqE,IAArE,CAJwD;AAK/D,WAAK,IAAI,CAAJ,EAAO,IAAI,KAAK,MAAL,EAAa,KAAK,CAAL,EAAQ;AACnC,cAAM,QAAQ,KAAK,CAAL,CAAR,EAAiB,OAAjB,CAAN,CADmC;AAEnC,kBAAU,IAAI,CAAJ;;;AAFyB,YAK/B,YAAY,SAAZ,EAAuB;AACzB,eAAK,CAAL,IAAU,SAAS,OAAT,CAAiB,IAAjB,CAAV,CADyB;SAA3B,MAEO,IAAI,YAAY,SAAZ,EAAuB;;AAEhC,eAAK,CAAL,IAAU,SAAS,OAAT,CAAiB,IAAjB,CAAV,CAFgC;AAGhC,yBAAe,IAAf,CAHgC;SAA3B,MAIA,IAAI,YAAY,QAAZ,EAAsB;;AAE/B,sBAAY,KAAK,CAAL,IAAU,SAAS,MAAT,CAAgB,IAAhB,CAAV,CAFmB;SAA1B,MAGA,IAAI,QAAQ,OAAR,EAAiB,OAAjB,KACT,QAAQ,OAAR,EAAiB,OAAjB,CADS,IAET,QAAQ,QAAR,EAAkB,OAAlB,CAFS,EAEmB;AAC5B,eAAK,CAAL,IAAU,QAAQ,OAAR,CAAV,CAD4B;SAFvB,MAIA,IAAI,IAAI,CAAJ,EAAO;AAChB,cAAI,CAAJ,CAAM,IAAN,CAAW,IAAI,CAAJ,EAAO,YAAY,OAAZ,EAAqB,IAArB,CAAlB,EAA8C,SAAS,OAAT,CAA9C,EAAiE,EAAjE,EADgB;AAEhB,eAAK,CAAL,IAAU,QAAQ,OAAR,CAAV,CAFgB;SAAX,MAGA;AACL,gBAAM,IAAI,KAAJ,CAAU,OAAO,WAAP,GAAqB,OAArB,CAAhB,CADK;SAHA;OAlBT;;AA0BA,YAAM,WAAW,SAAS,KAAT,CAAe,QAAQ,IAAR,CAAf,EAA8B,IAA9B,CAAX,GAAiD,SAAjD,CA/ByD;;AAiC/D,UAAI,IAAJ,EAAU;;;;AAIR,YAAI,aAAa,UAAU,OAAV,KAAsB,KAAtB,IACf,UAAU,OAAV,KAAsB,QAAQ,IAAR,CAAtB,EAAqC;AACrC,kBAAQ,IAAR,IAAgB,UAAU,OAAV,CADqB;SADvC,MAGO,IAAI,QAAQ,KAAR,IAAiB,CAAC,YAAD,EAAe;;AAEzC,kBAAQ,IAAR,IAAgB,GAAhB,CAFyC;SAApC;OAPT;KAjCF,MA6CO,IAAI,IAAJ,EAAU;;;AAGf,cAAQ,IAAR,IAAgB,QAAhB,CAHe;KAAV;GAvDF,CArQS;;AAmUhB,cAAY,WAAU,OAAM,aAAU,IAAV,EAAgB,QAAhB,EAA0B,OAA1B,EAAmC,SAAnC,EAA8C,GAA9C,EAAmD;AAC7E,QAAI,OAAO,IAAP,KAAgB,QAAhB,EAA0B;AAC5B,UAAI,SAAS,IAAT,CAAJ,EAAoB;;AAElB,eAAO,SAAS,IAAT,EAAe,QAAf,CAAP,CAFkB;OAApB;;;;;AAD4B,aASrB,QAAQ,QAAQ,IAAR,EAAc,QAAd,EAAwB,CAAxB,CAAf,CAT4B;KAA9B,MAUO,IAAI,CAAC,KAAK,MAAL,EAAa;;AAEvB,eAAS,IAAT,CAFuB;AAGvB,UAAI,OAAO,IAAP,EAAa;AACf,aAAI,OAAO,IAAP,EAAa,OAAO,QAAP,CAAjB,CADe;OAAjB;AAGA,UAAI,CAAC,QAAD,EAAW;AACb,eADa;OAAf;;AAIA,UAAI,SAAS,MAAT,EAAiB;;;AAGnB,eAAO,QAAP,CAHmB;AAInB,mBAAW,OAAX,CAJmB;AAKnB,kBAAU,IAAV,CALmB;OAArB,MAMO;AACL,eAAO,KAAP,CADK;OANP;KAVK;;;AAXsE,YAiC7E,GAAW,YAAY,YAAY,EAAZ;;;;AAjCsD,QAqCzE,OAAO,OAAP,KAAmB,UAAnB,EAA+B;AACjC,gBAAU,SAAV,CADiC;AAEjC,kBAAY,GAAZ,CAFiC;KAAnC;;;AArC6E,QA2CzE,SAAJ,EAAe;AACb,WAAK,KAAL,EAAY,IAAZ,EAAkB,QAAlB,EAA4B,OAA5B,EADa;KAAf,MAEO;;;;;;;AAOL,iBAAW,YAAY;AACrB,aAAK,KAAL,EAAY,IAAZ,EAAkB,QAAlB,EAA4B,OAA5B,EADqB;OAAZ,EAER,CAFH,EAPK;KAFP;;AAcA,WAAO,IAAP,CAzD6E;GAAnD;;;;;;AAnUZ,MAmYhB,CAAI,MAAJ,GAAa,UAAU,GAAV,EAAe;AAC1B,WAAO,KAAI,GAAJ,CAAP,CAD0B;GAAf;;;;;AAnYG,WA0YhB,CAAU,QAAV,GAAqB,OAArB,CA1YgB;;AA4YhB,WAAS,gBAAU,IAAV,EAAgB,IAAhB,EAAsB,QAAtB,EAAgC;AACvC,QAAI,OAAO,IAAP,KAAgB,QAAhB,EAA0B;AAC5B,YAAM,IAAI,KAAJ,CAAU,2DAAV,CAAN,CAD4B;KAA9B;;;AADuC,QAMnC,CAAC,KAAK,MAAL,EAAa;;;;AAIhB,iBAAW,IAAX,CAJgB;AAKhB,aAAO,EAAP,CALgB;KAAlB;;AAQA,QAAI,CAAC,QAAQ,OAAR,EAAiB,IAAjB,CAAD,IAA2B,CAAC,QAAQ,OAAR,EAAiB,IAAjB,CAAD,EAAyB;AACtD,cAAQ,IAAR,IAAgB,CAAC,IAAD,EAAO,IAAP,EAAa,QAAb,CAAhB,CADsD;KAAxD;GAdO,CA5YO;;AA+ZhB,SAAO,GAAP,GAAa;AACX,YAAQ,IAAR;GADF,CA/ZgB;CAAjB,GAAD","file":"almond-compiled.js","sourcesContent":["/**\n * @license almond 0.3.1 Copyright jQuery Foundation and other contributors.\n * Released under MIT license, http://github.com/requirejs/almond/LICENSE\n */\n//Going sloppy to avoid 'use strict' string cost, but strict practices should\n//be followed.\n/*jslint sloppy: true */\n/*global setTimeout: false */\n\nvar requirejs, require, define;\n(function (undef) {\n  var main, req, makeMap, handlers,\n    defined = {},\n    waiting = {},\n    config = {},\n    defining = {},\n    hasOwn = Object.prototype.hasOwnProperty,\n    aps = [].slice,\n    jsSuffixRegExp = /\\.js$/;\n\n  function hasProp(obj, prop) {\n    return hasOwn.call(obj, prop);\n  }\n\n  /**\n   * Given a relative module name, like ./something, normalize it to\n   * a real name that can be mapped to a path.\n   * @param {String} name the relative name\n   * @param {String} baseName a real name that the name arg is relative\n   * to.\n   * @returns {String} normalized name\n   */\n  function normalize(name, baseName) {\n    var nameParts, nameSegment, mapValue, foundMap, lastIndex,\n      foundI, foundStarMap, starI, i, j, part,\n      baseParts = baseName && baseName.split(\"/\"),\n      map = config.map,\n      starMap = (map && map['*']) || {};\n\n    //Adjust any relative paths.\n    if (name && name.charAt(0) === \".\") {\n      //If have a base name, try to normalize against it,\n      //otherwise, assume it is a top-level require that will\n      //be relative to baseUrl in the end.\n      if (baseName) {\n        name = name.split('/');\n        lastIndex = name.length - 1;\n\n        // Node .js allowance:\n        if (config.nodeIdCompat && jsSuffixRegExp.test(name[lastIndex])) {\n          name[lastIndex] = name[lastIndex].replace(jsSuffixRegExp, '');\n        }\n\n        //Lop off the last part of baseParts, so that . matches the\n        //\"directory\" and not name of the baseName's module. For instance,\n        //baseName of \"one/two/three\", maps to \"one/two/three.js\", but we\n        //want the directory, \"one/two\" for this normalization.\n        name = baseParts.slice(0, baseParts.length - 1).concat(name);\n\n        //start trimDots\n        for (i = 0; i < name.length; i += 1) {\n          part = name[i];\n          if (part === \".\") {\n            name.splice(i, 1);\n            i -= 1;\n          } else if (part === \"..\") {\n            if (i === 1 && (name[2] === '..' || name[0] === '..')) {\n              //End of the line. Keep at least one non-dot\n              //path segment at the front so it can be mapped\n              //correctly to disk. Otherwise, there is likely\n              //no path mapping for a path starting with '..'.\n              //This can still fail, but catches the most reasonable\n              //uses of ..\n              break;\n            } else if (i > 0) {\n              name.splice(i - 1, 2);\n              i -= 2;\n            }\n          }\n        }\n        //end trimDots\n\n        name = name.join(\"/\");\n      } else if (name.indexOf('./') === 0) {\n        // No baseName, so this is ID is resolved relative\n        // to baseUrl, pull off the leading dot.\n        name = name.substring(2);\n      }\n    }\n\n    //Apply map config if available.\n    if ((baseParts || starMap) && map) {\n      nameParts = name.split('/');\n\n      for (i = nameParts.length; i > 0; i -= 1) {\n        nameSegment = nameParts.slice(0, i).join(\"/\");\n\n        if (baseParts) {\n          //Find the longest baseName segment match in the config.\n          //So, do joins on the biggest to smallest lengths of baseParts.\n          for (j = baseParts.length; j > 0; j -= 1) {\n            mapValue = map[baseParts.slice(0, j).join('/')];\n\n            //baseName segment has  config, find if it has one for\n            //this name.\n            if (mapValue) {\n              mapValue = mapValue[nameSegment];\n              if (mapValue) {\n                //Match, update name to the new value.\n                foundMap = mapValue;\n                foundI = i;\n                break;\n              }\n            }\n          }\n        }\n\n        if (foundMap) {\n          break;\n        }\n\n        //Check for a star map match, but just hold on to it,\n        //if there is a shorter segment match later in a matching\n        //config, then favor over this star map.\n        if (!foundStarMap && starMap && starMap[nameSegment]) {\n          foundStarMap = starMap[nameSegment];\n          starI = i;\n        }\n      }\n\n      if (!foundMap && foundStarMap) {\n        foundMap = foundStarMap;\n        foundI = starI;\n      }\n\n      if (foundMap) {\n        nameParts.splice(0, foundI, foundMap);\n        name = nameParts.join('/');\n      }\n    }\n\n    return name;\n  }\n\n  function makeRequire(relName, forceSync) {\n    return function () {\n      //A version of a require function that passes a moduleName\n      //value for items that may need to\n      //look up paths relative to the moduleName\n      var args = aps.call(arguments, 0);\n\n      //If first arg is not require('string'), and there is only\n      //one arg, it is the array form without a callback. Insert\n      //a null so that the following concat is correct.\n      if (typeof args[0] !== 'string' && args.length === 1) {\n        args.push(null);\n      }\n      return req.apply(undef, args.concat([relName, forceSync]));\n    };\n  }\n\n  function makeNormalize(relName) {\n    return function (name) {\n      return normalize(name, relName);\n    };\n  }\n\n  function makeLoad(depName) {\n    return function (value) {\n      defined[depName] = value;\n    };\n  }\n\n  function callDep(name) {\n    if (hasProp(waiting, name)) {\n      var args = waiting[name];\n      delete waiting[name];\n      defining[name] = true;\n      main.apply(undef, args);\n    }\n\n    if (!hasProp(defined, name) && !hasProp(defining, name)) {\n      throw new Error('No ' + name);\n    }\n    return defined[name];\n  }\n\n  //Turns a plugin!resource to [plugin, resource]\n  //with the plugin being undefined if the name\n  //did not have a plugin prefix.\n  function splitPrefix(name) {\n    var prefix,\n      index = name ? name.indexOf('!') : -1;\n    if (index > -1) {\n      prefix = name.substring(0, index);\n      name = name.substring(index + 1, name.length);\n    }\n    return [prefix, name];\n  }\n\n  /**\n   * Makes a name map, normalizing the name, and using a plugin\n   * for normalization if necessary. Grabs a ref to plugin\n   * too, as an optimization.\n   */\n  makeMap = function (name, relName) {\n    var plugin,\n      parts = splitPrefix(name),\n      prefix = parts[0];\n\n    name = parts[1];\n\n    if (prefix) {\n      prefix = normalize(prefix, relName);\n      plugin = callDep(prefix);\n    }\n\n    //Normalize according\n    if (prefix) {\n      if (plugin && plugin.normalize) {\n        name = plugin.normalize(name, makeNormalize(relName));\n      } else {\n        name = normalize(name, relName);\n      }\n    } else {\n      name = normalize(name, relName);\n      parts = splitPrefix(name);\n      prefix = parts[0];\n      name = parts[1];\n      if (prefix) {\n        plugin = callDep(prefix);\n      }\n    }\n\n    //Using ridiculous property names for space reasons\n    return {\n      f: prefix ? prefix + '!' + name : name, //fullName\n      n: name,\n      pr: prefix,\n      p: plugin\n    };\n  };\n\n  function makeConfig(name) {\n    return function () {\n      return (config && config.config && config.config[name]) || {};\n    };\n  }\n\n  handlers = {\n    require: function (name) {\n      return makeRequire(name);\n    },\n    exports: function (name) {\n      var e = defined[name];\n      if (typeof e !== 'undefined') {\n        return e;\n      } else {\n        return (defined[name] = {});\n      }\n    },\n    module: function (name) {\n      return {\n        id: name,\n        uri: '',\n        exports: defined[name],\n        config: makeConfig(name)\n      };\n    }\n  };\n\n  main = function (name, deps, callback, relName) {\n    var cjsModule, depName, ret, map, i,\n      args = [],\n      callbackType = typeof callback,\n      usingExports;\n\n    //Use name if no relName\n    relName = relName || name;\n\n    //Call the callback to define the module, if necessary.\n    if (callbackType === 'undefined' || callbackType === 'function') {\n      //Pull out the defined dependencies and pass the ordered\n      //values to the callback.\n      //Default to [require, exports, module] if no deps\n      deps = !deps.length && callback.length ? ['require', 'exports', 'module'] : deps;\n      for (i = 0; i < deps.length; i += 1) {\n        map = makeMap(deps[i], relName);\n        depName = map.f;\n\n        //Fast path CommonJS standard dependencies.\n        if (depName === \"require\") {\n          args[i] = handlers.require(name);\n        } else if (depName === \"exports\") {\n          //CommonJS module spec 1.1\n          args[i] = handlers.exports(name);\n          usingExports = true;\n        } else if (depName === \"module\") {\n          //CommonJS module spec 1.1\n          cjsModule = args[i] = handlers.module(name);\n        } else if (hasProp(defined, depName) ||\n          hasProp(waiting, depName) ||\n          hasProp(defining, depName)) {\n          args[i] = callDep(depName);\n        } else if (map.p) {\n          map.p.load(map.n, makeRequire(relName, true), makeLoad(depName), {});\n          args[i] = defined[depName];\n        } else {\n          throw new Error(name + ' missing ' + depName);\n        }\n      }\n\n      ret = callback ? callback.apply(defined[name], args) : undefined;\n\n      if (name) {\n        //If setting exports via \"module\" is in play,\n        //favor that over return value and exports. After that,\n        //favor a non-undefined return value over exports use.\n        if (cjsModule && cjsModule.exports !== undef &&\n          cjsModule.exports !== defined[name]) {\n          defined[name] = cjsModule.exports;\n        } else if (ret !== undef || !usingExports) {\n          //Use the return value from the function.\n          defined[name] = ret;\n        }\n      }\n    } else if (name) {\n      //May just be an object definition for the module. Only\n      //worry about defining if have a module name.\n      defined[name] = callback;\n    }\n  };\n\n  requirejs = require = req = function (deps, callback, relName, forceSync, alt) {\n    if (typeof deps === \"string\") {\n      if (handlers[deps]) {\n        //callback in this case is really relName\n        return handlers[deps](callback);\n      }\n      //Just return the module wanted. In this scenario, the\n      //deps arg is the module name, and second arg (if passed)\n      //is just the relName.\n      //Normalize module name, if it contains . or ..\n      return callDep(makeMap(deps, callback).f);\n    } else if (!deps.splice) {\n      //deps is a config object, not an array.\n      config = deps;\n      if (config.deps) {\n        req(config.deps, config.callback);\n      }\n      if (!callback) {\n        return;\n      }\n\n      if (callback.splice) {\n        //callback is an array, which means it is a dependency list.\n        //Adjust args if there are dependencies\n        deps = callback;\n        callback = relName;\n        relName = null;\n      } else {\n        deps = undef;\n      }\n    }\n\n    //Support require(['a'])\n    callback = callback || function () {};\n\n    //If relName is a function, it is an errback handler,\n    //so remove it.\n    if (typeof relName === 'function') {\n      relName = forceSync;\n      forceSync = alt;\n    }\n\n    //Simulate async callback;\n    if (forceSync) {\n      main(undef, deps, callback, relName);\n    } else {\n      //Using a non-zero value because of concern for what old browsers\n      //do, and latest browsers \"upgrade\" to 4 if lower value is used:\n      //http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#dom-windowtimers-settimeout:\n      //If want a value immediately, use require('id') instead -- something\n      //that works in almond on the global level, but not guaranteed and\n      //unlikely to work in other AMD implementations.\n      setTimeout(function () {\n        main(undef, deps, callback, relName);\n      }, 4);\n    }\n\n    return req;\n  };\n\n  /**\n   * Just drops the config on the floor, but returns req in case\n   * the config return value is used.\n   */\n  req.config = function (cfg) {\n    return req(cfg);\n  };\n\n  /**\n   * Expose module registry for debugging and tooling\n   */\n  requirejs._defined = defined;\n\n  define = function (name, deps, callback) {\n    if (typeof name !== 'string') {\n      throw new Error('See almond README: incorrect module build, no module name');\n    }\n\n    //This module may not have dependencies\n    if (!deps.splice) {\n      //deps is not an array, so probably means\n      //an object literal or factory function for\n      //the value. Adjust args.\n      callback = deps;\n      deps = [];\n    }\n\n    if (!hasProp(defined, name) && !hasProp(waiting, name)) {\n      waiting[name] = [name, deps, callback];\n    }\n  };\n\n  define.amd = {\n    jQuery: true\n  };\n}());\n\n"]}
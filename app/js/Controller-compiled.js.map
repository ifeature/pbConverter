{"version":3,"sources":["Controller.js"],"names":[],"mappings":"AAAA;;AAEA,OAAO,CAAC,gBAAD,EAAmB,kBAAnB,EAAuC,iBAAvC,EAA0D,eAA1D,CAAP,EAAmF,UAAU,KAAV,EAAiB,OAAjB,EAA0B,MAA1B,EAAkC,IAAlC,EAAwC;AACzH,MAAM,aAAa,OAAO,MAAP,CAAc,IAAd,CAAb,CADmH;AAEzH,MAAI,iBAAJ,CAFyH;;AAIzH,aAAW,OAAX,GAAqB,YAAM;AACzB,eAAW,IAAI,MAAM,UAAN,EAAf,CADyB;;AAGzB,QAAM,cAAc,SAAd,WAAc,CAAU,IAAV,EAAgB;AAClC,WAAK,IAAI,IAAI,KAAK,MAAL,GAAc,CAAd,EAAiB,GAA9B,GAAoC;AAClC,iBAAS,KAAK,CAAL,EAAQ,GAAR,CAAT,GAAwB,IAAI,MAAM,QAAN,EAA5B,CADkC;AAElC,aAAK,IAAI,CAAJ,IAAS,KAAK,CAAL,CAAd,EAAuB;AACrB,cAAI,MAAM,UAAN,IAAoB,MAAM,KAAN,EAAa,SAArC;AACA,mBAAS,KAAK,CAAL,EAAQ,GAAR,CAAT,CAAsB,CAAtB,IAA2B,KAAK,CAAL,EAAQ,CAAR,CAA3B,CAFqB;SAAvB;OAFF;;AAQA,iBAAW,UAAX,GATkC;KAAhB,CAHK;;AAezB,QAAM,UAAU,IAAI,OAAJ,EAAV,CAfmB;AAgBzB,YAAQ,OAAR,CAAgB,OAAO,GAAP,CAAW,IAAX,EAAiB,WAAjC,EAhByB;GAAN,CAJoG;;AAuBzH,aAAW,UAAX,GAAwB,YAAY;AAClC,SAAK,UAAL,CAAgB,QAAhB,EADkC;GAAZ,CAvBiG;;AA2BzH,aAAW,WAAX,GAAyB,YAAY;AACnC,QAAM,SAAS,EAAT,CAD6B;AAEnC,QAAM,aAAa,SAAS,cAAT,CAAwB,YAAxB,CAAb,CAF6B;AAGnC,QAAM,iBAAiB,SAAS,cAAT,CAAwB,gBAAxB,CAAjB,CAH6B;AAInC,QAAM,kBAAkB,SAAS,cAAT,CAAwB,iBAAxB,CAAlB,CAJ6B;AAKnC,QAAM,SAAS,OAAO,UAAP,CAAkB,WAAW,KAAX,CAA3B,CAL6B;;AAOnC,QAAI,CAAC,MAAD,IAAW,KAAK,GAAL,CAAS,MAAT,MAAqB,MAArB,IAA+B,OAAO,SAAP,GAAmB,MAAnB,EAA2B;AACvE,aAAO,IAAP,CAAY,WAAW,KAAX,CAAZ,CADuE;KAAzE;AAGA,QAAI,CAAC,eAAe,KAAf,EAAsB;AACzB,aAAO,IAAP,CAAY,eAAe,KAAf,CAAZ,CADyB;KAA3B;AAGA,QAAI,CAAC,gBAAgB,KAAhB,EAAuB;AAC1B,aAAO,IAAP,CAAY,gBAAgB,KAAhB,CAAZ,CAD0B;KAA5B;;AAIA,QAAI,OAAO,MAAP,GAAgB,CAAhB,EAAmB;AACrB,UAAM,WAAW,IAAI,KAAK,QAAL,CAAc,MAAlB,CAAX,CADe;AAErB,eAAS,MAAT,GAFqB;AAGrB,WAAK,QAAL,CAAc,IAAd,GAHqB;AAIrB,aAJqB;KAAvB;;AAOA,SAAK,aAAL,CAAmB,SAAS,OAAT,CAAiB,MAAjB,EAAyB,eAAe,KAAf,EAAsB,gBAAgB,KAAhB,CAAlE,EAxBmC;GAAZ,CA3BgG;;AAsDzH,SAAO,UAAP,GAAoB,UAApB,CAtDyH;AAuDzH,SAAO,UAAP,CAvDyH;CAAxC,CAAnF","file":"Controller-compiled.js","sourcesContent":["'use strict';\n\ndefine(['Model-compiled', 'Service-compiled', 'CONFIG-compiled', 'View-compiled'], function (Model, Service, CONFIG, View) {\n  const Controller = Object.create(null);\n  let currency;\n\n  Controller.getData = () => {\n    currency = new Model.Currencies();\n\n    const saveToArray = function (data) {\n      for (let i = data.length - 1; i--;) {\n        currency[data[i].ccy] = new Model.Currency();\n        for (let j in data[i]) {\n          if (j === 'base_ccy' || j === 'ccy') continue;\n          currency[data[i].ccy][j] = data[i][j];\n        }\n      }\n\n      Controller.renderData();\n    };\n\n    const service = new Service();\n    service.getJSON(CONFIG.url.json, saveToArray);\n  };\n\n  Controller.renderData = function () {\n    View.initRender(currency);\n  };\n\n  Controller.convertData = function () {\n    const fields = [];\n    const inputValue = document.getElementById('inputValue');\n    const changeCurrency = document.getElementById('changeCurrency');\n    const receiveCurrency = document.getElementById('receiveCurrency');\n    const amount = Number.parseFloat(inputValue.value);\n\n    if (!amount || Math.abs(amount) !== amount || Number.MAX_VALUE < amount) {\n      fields.push(inputValue.title);\n    }\n    if (!changeCurrency.value) {\n      fields.push(changeCurrency.title);\n    }\n    if (!receiveCurrency.value) {\n      fields.push(receiveCurrency.title);\n    }\n\n    if (fields.length > 0) {\n      const errorBox = new View.ErrorBox(fields);\n      errorBox.render();\n      View.ErrorBox.show();\n      return;\n    }\n\n    View.displayResult(currency.convert(amount, changeCurrency.value, receiveCurrency.value));\n  };\n\n  window.Controller = Controller;\n  return Controller;\n});\n"]}